{"version":3,"file":"static/js/945.d655fd70.chunk.js","mappings":"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","sources":["Components/Courses/AllCourses.tsx","Components/Courses/MyCoursesCorousel.tsx","Components/Courses/CoursesCarousel.tsx","Components/Blog/BlogList.tsx","Components/Main/MainPage.tsx","SliderWidthCustomArrows.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport styled from 'styled-components'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport { Page, PageBlock, PageBlockHeader, PageBlockPhrase, responsiveText } from '../PageBlocks'\r\nimport { Link } from 'react-router-dom'\r\nimport { MobileBreakPoint, TabletBreakPoint } from '../../utils/consts'\r\n\r\nexport interface Course {\r\n  id: number,\r\n  title: string,\r\n  img: string,\r\n  phrase: string\r\n}\r\nconst mockCourses: Course[] = [\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n  width: 25%;\r\n  min-width: 144px;\r\n\r\n  ${marginBottom(90)}\r\n\r\n  @media (max-width: ${TabletBreakPoint}){\r\n    width: 50%;\r\n  }\r\n`\r\n\r\nconst CourseCardContent = styled.div`\r\n  width: 90%;\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  aspect-ratio: 89/100;\r\n  ${marginBottom(45)}\r\n  pointer-events: none;\r\n`\r\n\r\nconst CourseTitle=styled.a`\r\n  display: block;\r\n  text-transform: uppercase;\r\n  ${responsiveText(36,36,16)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  font-weight: 600;\r\n  ${marginBottom(24)}\r\n`\r\n\r\nconst CoursePhrase=styled.a`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  ${marginBottom(45)}\r\n`\r\n\r\nconst CourseLink=styled(Link)`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n`\r\nexport const CourseCard = ({ course, containerStyle }: PropsWithChildren<{ course: Course, containerStyle?: React.CSSProperties }>) => {\r\n\r\n  const { title, phrase, id, img } = course\r\n  return <CourseCardContainer style={containerStyle}>\r\n    <CourseCardContent>\r\n      <CourseImg src={img} alt={title} />\r\n      <CourseTitle>{title}</CourseTitle>\r\n      <CoursePhrase>{phrase}</CoursePhrase>\r\n      <CourseLink to={'/courses/'+id}>Перейти</CourseLink>\r\n    </CourseCardContent>\r\n  </CourseCardContainer>\r\n}\r\nexport const AllCoursesContainer = styled.div`\r\n\r\n  width: 102.5%;\r\n  display: flex;\r\n  ${marginTop(90)}\r\n  flex-wrap: wrap;\r\n\r\n  @media (max-width: ${TabletBreakPoint}){\r\n    width: 105%;\r\n  }\r\n  \r\n`\r\nfunction AllCourses() {\r\n\r\n  const courses = mockCourses\r\n\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Все курсы</PageBlockHeader>\r\n        <PageBlockPhrase>Добро пожаловать в мир Академии тут снова будет какой-то текст, но пока что так.</PageBlockPhrase>\r\n        <AllCoursesContainer>\r\n          {\r\n            courses.map(course => <CourseCard course={course} />)\r\n          }\r\n        </AllCoursesContainer>\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default AllCourses","import React, { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport SliderWithCustomArrows from '../../SliderWidthCustomArrows'\r\nimport { responsiveText } from '../PageBlocks'\r\nimport { isMobile, isMobileOnly } from 'react-device-detect'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport { MobileBreakPoint, TabletBreakPoint } from '../../utils/consts'\r\nimport { SwiperSlide } from 'swiper/react'\r\nimport { Link } from 'react-router-dom'\r\ninterface Course {\r\n    id: number | string,\r\n    title: string,\r\n    totalLessons: number,\r\n    finishedLessons: number,\r\n    img: string\r\n}\r\nconst mockCourses: Course[] = [\r\n    {\r\n        id: 0,\r\n        title: 'Как написать песню',\r\n        totalLessons: 10,\r\n        finishedLessons: 2,\r\n        img: mockCourse\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Как стать звездой',\r\n        totalLessons: 10,\r\n        finishedLessons: 0,\r\n        img: mockCourse\r\n    }\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n    width: 100%;   \r\n`\r\n\r\nconst CourseTitle = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(64, 36, 16)}\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n    line-height: 1;\r\n    ${marginBottom(24)}\r\n`\r\n\r\nconst CourseProgress = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\n${marginBottom(45)}\r\n`\r\nconst CourseText = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(18, 18, 12)}\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n`\r\n\r\nconst CourseLessonsProgressbar = styled.div<{ progress: number }>`\r\n    height: 6px;\r\n    width: 18%;\r\n    min-width: 60px;\r\n    background-color: ${(props) => props.theme.colors.text};\r\n    border-radius: 10px;\r\n    margin-left: 3%;\r\n    margin-right: 1%;\r\n    &::after{\r\n        display: block;\r\n        content: '';\r\n        height: 100%;\r\n        width: ${(props) => props.progress + '%'};\r\n        background-color: ${(props) => props.theme.colors.progress};\r\n        border-radius: inherit;\r\n    }\r\n\r\n    @media (max-width: ${MobileBreakPoint}){\r\n        height: 3px;\r\n    }\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n    object-fit: cover;\r\n    width: 91%;\r\n    aspect-ratio: 18/10;\r\n    pointer-events: none;\r\n    ${marginBottom(45)}\r\n`\r\n\r\nconst CourseLink = styled(Link)`\r\ndisplay: block;\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(36, 36, 12)}\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n`\r\nconst CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n    const progress = Math.round(course.finishedLessons / course.totalLessons * 100)\r\n\r\n    const linkPhrase = course.finishedLessons === 0 ? 'начать' : 'продолжить'\r\n\r\n    return <CourseCardContainer>\r\n            <div style={{ position: isMobile ? 'absolute' : undefined, transform: isMobile ? 'translate(5%,10%)' : undefined }}>\r\n                <CourseTitle>{course.title}</CourseTitle>\r\n                <CourseProgress>\r\n                    <CourseText>{`Урок ${course.finishedLessons}/${course.totalLessons}`}</CourseText>\r\n                    <CourseLessonsProgressbar progress={progress} />\r\n                    <CourseText>{`${progress}%`}</CourseText>\r\n                </CourseProgress>\r\n            </div>\r\n\r\n            <CourseImg alt={course.title} src={course.img} />\r\n            <CourseLink to={'/courses/' + course.id}>{`${linkPhrase} изучение`}</CourseLink>\r\n    </CourseCardContainer>\r\n}\r\n\r\nconst MyCoursesCarouselContainer = styled.div`\r\n\r\n  position: relative;\r\n  width: 105%;\r\n\r\n${marginTop(90)};\r\n\r\n@media (max-width: ${TabletBreakPoint}){\r\n    width: 180%;\r\n}\r\n\r\n`\r\n\r\nfunction MyCoursesCorousel() {\r\n\r\n    const courses = mockCourses\r\n\r\n\r\n    return (\r\n        <MyCoursesCarouselContainer>\r\n            <SliderWithCustomArrows childrenLength={courses.length} slidesToShow={2} infinite={isMobile}>\r\n                {\r\n                    courses.map((course) => <CourseCard course={course} />)\r\n                }\r\n            </SliderWithCustomArrows>\r\n        </MyCoursesCarouselContainer>\r\n    )\r\n}\r\n\r\nexport default MyCoursesCorousel","import React from 'react'\r\nimport { AllCoursesContainer, Course, CourseCard } from './AllCourses'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport styled from 'styled-components'\r\nimport SliderWithCustomArrows from '../../SliderWidthCustomArrows'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { ALL_COURSES_ROUTE, TabletBreakPoint } from '../../utils/consts'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport { RedLinkButton } from '../PageBlocks'\r\n\r\nconst mockCourses: Course[] = [\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n]\r\n\r\nconst CourseCarouselContainer = styled.div`\r\n  width: 102.5%;\r\n  ${marginTop(90)}\r\n\r\n  @media (max-width: ${TabletBreakPoint}){\r\n    width: 190%;\r\n  }\r\n`\r\n\r\n\r\n\r\nfunction CoursesCarousel() {\r\n\r\n  const courses = mockCourses\r\n\r\n  const isSlide = isMobile && courses.length > 2\r\n\r\n  const courseContainerStyle: React.CSSProperties = {\r\n    width: isSlide ? '100%' : undefined,\r\n    marginBottom: 0\r\n  }\r\n\r\n  const elements = courses.map(course => <CourseCard containerStyle={courseContainerStyle} course={course} />)\r\n  return <>{isSlide ?\r\n    <CourseCarouselContainer>\r\n      <SliderWithCustomArrows childrenLength={courses.length} slidesToShow={4} infinite={isMobile}>\r\n        {\r\n          elements\r\n        }\r\n      </SliderWithCustomArrows>\r\n    </CourseCarouselContainer>\r\n    :\r\n    <AllCoursesContainer>\r\n      {\r\n        elements\r\n      }\r\n    </AllCoursesContainer>}\r\n  </>\r\n}\r\n\r\nexport default CoursesCarousel","import React, { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport mockArticle from '../../img/mockArticle.png'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport { responsiveText } from '../PageBlocks'\r\nimport { Link } from 'react-router-dom'\r\nimport { BLOG_ROUTE, MobileBreakPoint, TabletBreakPoint } from '../../utils/consts'\r\n\r\ninterface Article {\r\n    id: number,\r\n    title: string,\r\n    date: string,\r\n    img: string\r\n}\r\n\r\nconst ArticleContainer = styled.div`\r\n    width: 50%;\r\n    display: flex;\r\n    ${marginBottom(45)}\r\n    align-items: end;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width: ${TabletBreakPoint} ) and (orientation: portrait){\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst ArticleImg = styled.img`\r\n    object-fit: cover;\r\n    width: 47%;\r\n    aspect-ratio: 89/100;\r\n`\r\n\r\nconst ArticleDescription = styled.div`\r\n    width: 50%;\r\n`\r\n\r\nconst ArticleDate = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(18, 12, 8)}\r\n    ${marginBottom(24)}\r\n`\r\n\r\nconst ArticleTitle = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(24, 18, 16)}\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    ${marginBottom(45)}\r\n`\r\n\r\nconst ArticleLink=styled(Link)`\r\ndisplay: block;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(18, 14, 12)}\r\n    font-weight: 500;\r\n    line-height: 1;\r\n`\r\nfunction Article({ article }: PropsWithChildren<{ article: Article }>) {\r\n\r\n    const { id, title, date, img } = article\r\n\r\n    return <ArticleContainer>\r\n        <ArticleImg src={img} alt={title} />\r\n        <ArticleDescription>\r\n            <ArticleDate>{date}</ArticleDate>\r\n            <ArticleTitle>{title}</ArticleTitle>\r\n            <ArticleLink to={BLOG_ROUTE+'/'+id}>Читать</ArticleLink>\r\n        </ArticleDescription>\r\n    </ArticleContainer>\r\n}\r\n\r\nconst mockArticles: Article[] = [\r\n    {\r\n        id: 0,\r\n        title: 'Инструкции для начинающих музыкантов',\r\n        date: '12 сентября 2024',\r\n        img: mockArticle,\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Инструкции для начинающих музыкантов',\r\n        date: '12 сентября 2024',\r\n        img: mockArticle,\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Инструкции для начинающих музыкантов',\r\n        date: '12 сентября 2024',\r\n        img: mockArticle,\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Инструкции для начинающих музыкантов',\r\n        date: '12 сентября 2024',\r\n        img: mockArticle,\r\n    }\r\n]\r\nconst BlogListContainer = styled.div`\r\n    width: 100%;\r\n    ${marginTop(90)}\r\n`\r\nfunction BlogList() {\r\n\r\n    const articles = mockArticles\r\n    return (\r\n        <BlogListContainer>\r\n            {\r\n                articles.map((article) => <Article article={article} />)\r\n            }\r\n        </BlogListContainer>\r\n    )\r\n}\r\n\r\nexport default BlogList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/store'\r\nimport { Page, PageBlock, PageBlockHeader, PageBlockPhrase, PageLinkButtonContainer, RedLinkButton } from '../PageBlocks'\r\nimport MyCoursesCorousel from '../Courses/MyCoursesCorousel'\r\nimport AllCourses from '../Courses/AllCourses'\r\nimport { ALL_COURSES_ROUTE, BLOG_ROUTE } from '../../utils/consts'\r\nimport styled from 'styled-components'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport CoursesCarousel from '../Courses/CoursesCarousel'\r\nimport BlogList from '../Blog/BlogList'\r\n\r\nfunction MainPage() {\r\n\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Главная</PageBlockHeader>\r\n        <MyCoursesCorousel />\r\n      </PageBlock>\r\n      <PageBlock>\r\n        <PageBlockHeader>Популярные курсы</PageBlockHeader>\r\n        <PageBlockPhrase>Добро пожаловать в мир Академии тут снова будет какой-то текст, но пока что так.</PageBlockPhrase>\r\n        <CoursesCarousel />\r\n        <PageLinkButtonContainer>\r\n          <RedLinkButton to={ALL_COURSES_ROUTE} hover>Все курсы</RedLinkButton>\r\n        </PageLinkButtonContainer>\r\n      </PageBlock>\r\n      <PageBlock>\r\n        <PageBlockHeader>Полезные статьи</PageBlockHeader>\r\n        <BlogList />\r\n        <PageLinkButtonContainer>\r\n          <RedLinkButton to={BLOG_ROUTE} hover>Все статьи</RedLinkButton>\r\n        </PageLinkButtonContainer>\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MainPage","import React, { PropsWithChildren, useRef, useState } from 'react'\r\nimport Slider, { Settings } from 'react-slick'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { styled } from 'styled-components';\r\nimport { RiArrowLeftWideFill } from \"react-icons/ri\";\r\nimport { RiArrowRightWideFill } from \"react-icons/ri\";\r\nimport { MobileBreakPoint, TabletBreakPoint } from './utils/consts';\r\nimport { isDesktop } from 'react-device-detect';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nenum arrowType {\r\n    prev,\r\n    next\r\n}\r\ninterface SliderProps {\r\n    slidesToShow: number,\r\n    childrenLength: number,\r\n    infinite?: boolean\r\n}\r\n\r\nconst SliderContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst CustomArrow = styled.div<{ type: arrowType }>`\r\nwidth: fit-content;\r\nheight: fit-content;\r\ncolor: #c9c9c9;\r\nopacity: 0.5;\r\ntransition: opacity .1s ease-in-out;\r\npointer-events: auto;\r\ncursor: pointer;\r\nfont-size: 64px;\r\n&:hover{\r\n    opacity: 0.9;\r\n}\r\n`\r\n\r\nconst ArrowsContainer=styled.div`\r\nwidth: 87svw;\r\nz-index: 1;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 0;\r\ntransform: translate(-5%,-50%);\r\ndisplay: flex;\r\njustify-content: space-between;\r\npointer-events: none;\r\n\r\n@media(max-width: ${TabletBreakPoint}){\r\n    width: 110%;\r\n    \r\n}\r\n\r\n@media (max-width: ${MobileBreakPoint}) {\r\n    width: 113%;\r\n}\r\n`\r\n\r\nconst DotsContainer=styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n`\r\n\r\nconst Dot=styled.div<{selected: boolean}>`\r\n    width: 10px;\r\n    aspect-ratio: 1/1;\r\n    background-color: red;\r\n    opacity: ${({selected})=>selected? '0.5': '1'};\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    transition: opacity .3s ease-in-out;\r\n`\r\n\r\nconst CustomSlider=styled(Slider)`\r\n    \r\n`\r\nfunction SliderWithCustomArrows({ children, slidesToShow, childrenLength, infinite }: PropsWithChildren<SliderProps>) {\r\n\r\n\r\n    const sliderRef = useRef<Slider>(null)\r\n\r\n    const [selectedIndex, setSelectedIndex]=useState(0)\r\n    \r\n\r\n    const isSlided = infinite ?? childrenLength > slidesToShow\r\n    const settings: Settings = {\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        infinite: isSlided,\r\n        dots: false,\r\n        slidesToShow: slidesToShow,\r\n        swipeToSlide: isSlided,\r\n        rows: 1,\r\n        beforeChange(currentSlide: number, nextSlide: number) {\r\n            setSelectedIndex(nextSlide)\r\n        },\r\n    }\r\n\r\n    const nextSlide=()=>{\r\n        sliderRef.current?.slickNext()\r\n    }\r\n\r\n    const prevSlide=()=>{\r\n        sliderRef.current?.slickPrev()\r\n    }\r\n\r\n    const handlers=useSwipeable({\r\n        onSwipedLeft: nextSlide,\r\n        onSwipedRight: prevSlide\r\n    })\r\n    return (\r\n        <SliderContainer {...handlers}>\r\n            {isSlided && isDesktop && <ArrowsContainer>\r\n            <CustomArrow type={arrowType.prev} onClick={prevSlide}>\r\n                <RiArrowLeftWideFill />\r\n            </CustomArrow>\r\n            <CustomArrow type={arrowType.next} onClick={nextSlide}>\r\n                <RiArrowRightWideFill />\r\n            </CustomArrow>\r\n            </ArrowsContainer>}\r\n            <CustomSlider ref={sliderRef} {...settings}>\r\n                {\r\n                    children\r\n                }\r\n            </CustomSlider>\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\nexport default SliderWithCustomArrows"],"names":["mockCourses","id","title","img","mockCourse","phrase","CourseCardContainer","styled","div","marginBottom","TabletBreakPoint","CourseCardContent","CourseImg","CourseTitle","a","responsiveText","props","theme","colors","text","CoursePhrase","CourseLink","Link","CourseCard","_ref","course","containerStyle","_jsx","style","children","_jsxs","src","alt","to","AllCoursesContainer","marginTop","courses","Page","PageBlock","PageBlockHeader","PageBlockPhrase","map","totalLessons","finishedLessons","CourseProgress","CourseText","CourseLessonsProgressbar","progress","MobileBreakPoint","Math","round","linkPhrase","position","isMobile","undefined","transform","MyCoursesCarouselContainer","SliderWithCustomArrows","childrenLength","length","slidesToShow","infinite","CourseCarouselContainer","isSlide","courseContainerStyle","width","elements","_Fragment","ArticleContainer","ArticleImg","ArticleDescription","ArticleDate","ArticleTitle","ArticleLink","Article","article","date","BLOG_ROUTE","mockArticles","mockArticle","BlogListContainer","articles","MyCoursesCorousel","CoursesCarousel","PageLinkButtonContainer","RedLinkButton","ALL_COURSES_ROUTE","hover","BlogList","arrowType","SliderContainer","CustomArrow","ArrowsContainer","CustomSlider","selected","Slider","_ref2","sliderRef","useRef","selectedIndex","setSelectedIndex","useState","isSlided","settings","arrows","slidesToScroll","dots","swipeToSlide","rows","beforeChange","currentSlide","nextSlide","_sliderRef$current","current","slickNext","prevSlide","_sliderRef$current2","slickPrev","handlers","useSwipeable","onSwipedLeft","onSwipedRight","isDesktop","type","prev","onClick","RiArrowLeftWideFill","next","RiArrowRightWideFill","ref"],"sourceRoot":""}