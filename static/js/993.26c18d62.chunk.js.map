{"version":3,"file":"static/js/993.26c18d62.chunk.js","mappings":"yPAaA,MAAMA,EAAwB,CAC5B,CACEC,GAAI,EACJC,MAAO,qGACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,+FACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,qGACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,+FACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,qGACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,+FACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,qGACPC,IAAKC,EACLC,OAAQ,yHAEV,CACEJ,GAAI,EACJC,MAAO,+FACPC,IAAKC,EACLC,OAAQ,0HAKNC,EAAsBC,EAAAA,GAAOC,GAAG;;;;;;;KAOlCC,EAAAA,EAAAA,GAAa;EAGXC,EAAoBH,EAAAA,GAAOC,GAAG;;EAI9BG,EAAYJ,EAAAA,GAAOJ,GAAG;;;;KAIxBM,EAAAA,EAAAA,GAAa;EAGXG,EAAYL,EAAAA,GAAOM,CAAC;;;KAGtBC,EAAAA,EAAAA,IAAe,GAAG,GAAG;WACbC,GAAQA,EAAMC,MAAMC,OAAOC;;;;KAInCT,EAAAA,EAAAA,GAAa;EAGXU,EAAaZ,EAAAA,GAAOM,CAAC;;KAEvBC,EAAAA,EAAAA,IAAe,GAAG,GAAG;WACbC,GAAQA,EAAMC,MAAMC,OAAOC;;;KAGnCT,EAAAA,EAAAA,GAAa;EAGXW,GAAWb,EAAAA,EAAAA,IAAOc,EAAAA,GAAK;;KAEzBP,EAAAA,EAAAA,IAAe,GAAG,GAAG;WACbC,GAAQA,EAAMC,MAAMC,OAAOC;;;;;;EAO1BI,EAAaC,IAAwD,IAAvD,OAAEC,GAA+CD,EAE1E,MAAM,MAAErB,EAAK,OAAEG,EAAM,GAAEJ,EAAE,IAAEE,GAAQqB,EACnC,OAAOC,EAAAA,EAAAA,KAACnB,EAAmB,CAAAoB,UACzBC,EAAAA,EAAAA,MAACjB,EAAiB,CAAAgB,SAAA,EAChBD,EAAAA,EAAAA,KAACd,EAAS,CAACiB,IAAKzB,EAAK0B,IAAK3B,KAC1BuB,EAAAA,EAAAA,KAACb,EAAW,CAAAc,SAAExB,KACduB,EAAAA,EAAAA,KAACN,EAAY,CAAAO,SAAErB,KACfoB,EAAAA,EAAAA,KAACL,EAAU,CAACU,GAAI,YAAY7B,EAAGyB,SAAC,mDAEd,EAEXK,EAAsBxB,EAAAA,GAAOC,GAAG;;;;;;;KAOzCwB,EAAAA,EAAAA,GAAU;;;;EAwBd,QAnBA,WAEE,MAAMC,EAAUjC,EAEhB,OACEyB,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAAR,UACHC,EAAAA,EAAAA,MAACQ,EAAAA,GAAS,CAAAT,SAAA,EACRD,EAAAA,EAAAA,KAACW,EAAAA,GAAe,CAACJ,UAAW,GAAGN,SAAC,uDAChCD,EAAAA,EAAAA,KAACY,EAAAA,GAAe,CAAAX,SAAC,sZACjBD,EAAAA,EAAAA,KAACM,EAAmB,CAAAL,SAEhBO,EAAQK,KAAId,IAAUC,EAAAA,EAAAA,KAACH,EAAU,CAACE,OAAQA,YAMtD,C","sources":["Components/Courses/AllCourses.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport styled from 'styled-components'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport { Page, PageBlock, PageBlockHeader, PageBlockPhrase, responsiveText } from '../PageBlocks'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport interface Course {\r\n  id: number,\r\n  title: string,\r\n  img: string,\r\n  phrase: string\r\n}\r\nconst mockCourses: Course[] = [\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n  width: 25%;\r\n  min-width: 144px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${marginBottom(90)}\r\n`\r\n\r\nconst CourseCardContent = styled.div`\r\n  width: 90%;\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  aspect-ratio: 89/100;\r\n  ${marginBottom(45)}\r\n`\r\n\r\nconst CourseTitle=styled.a`\r\n  display: block;\r\n  text-transform: uppercase;\r\n  ${responsiveText(36,36,16)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  font-weight: 600;\r\n  ${marginBottom(24)}\r\n`\r\n\r\nconst CoursePhrase=styled.a`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  ${marginBottom(24)}\r\n`\r\n\r\nconst CourseLink=styled(Link)`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n`\r\nexport const CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n  const { title, phrase, id, img } = course\r\n  return <CourseCardContainer>\r\n    <CourseCardContent>\r\n      <CourseImg src={img} alt={title} />\r\n      <CourseTitle>{title}</CourseTitle>\r\n      <CoursePhrase>{phrase}</CoursePhrase>\r\n      <CourseLink to={'/courses/'+id}>Перейти</CourseLink>\r\n    </CourseCardContent>\r\n  </CourseCardContainer>\r\n}\r\nexport const AllCoursesContainer = styled.div`\r\n\r\n  width: 102.5%;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  ${marginTop(90)}\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  \r\n`\r\nfunction AllCourses() {\r\n\r\n  const courses = mockCourses\r\n\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Все курсы</PageBlockHeader>\r\n        <PageBlockPhrase>Добро пожаловать в мир Академии тут снова будет какой-то текст, но пока что так.</PageBlockPhrase>\r\n        <AllCoursesContainer>\r\n          {\r\n            courses.map(course => <CourseCard course={course} />)\r\n          }\r\n        </AllCoursesContainer>\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default AllCourses"],"names":["mockCourses","id","title","img","mockCourse","phrase","CourseCardContainer","styled","div","marginBottom","CourseCardContent","CourseImg","CourseTitle","a","responsiveText","props","theme","colors","text","CoursePhrase","CourseLink","Link","CourseCard","_ref","course","_jsx","children","_jsxs","src","alt","to","AllCoursesContainer","marginTop","courses","Page","PageBlock","PageBlockHeader","PageBlockPhrase","map"],"sourceRoot":""}