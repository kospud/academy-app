{"version":3,"file":"static/js/831.46e8c132.chunk.js","mappings":"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","sources":["Components/Courses/AllCourses.tsx","Components/Courses/MyCoursesCorousel.tsx","Components/Courses/CoursesCarousel.tsx","Components/Main/MainPage.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport styled from 'styled-components'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport { Page, PageBlock, PageBlockHeader, PageBlockPhrase, responsiveText } from '../PageBlocks'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport interface Course {\r\n  id: number,\r\n  title: string,\r\n  img: string,\r\n  phrase: string\r\n}\r\nconst mockCourses: Course[] = [\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 0,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Как написать песню',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Как стать звездой',\r\n    img: mockCourse,\r\n    phrase: 'Все начинается с песен'\r\n  },\r\n\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n  width: 25%;\r\n  min-width: 144px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${marginBottom(90)}\r\n`\r\n\r\nconst CourseCardContent = styled.div`\r\n  width: 90%;\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  aspect-ratio: 89/100;\r\n  ${marginBottom(45)}\r\n`\r\n\r\nconst CourseTitle=styled.a`\r\n  display: block;\r\n  text-transform: uppercase;\r\n  ${responsiveText(36,36,16)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  font-weight: 600;\r\n  ${marginBottom(24)}\r\n`\r\n\r\nconst CoursePhrase=styled.a`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  ${marginBottom(24)}\r\n`\r\n\r\nconst CourseLink=styled(Link)`\r\n  display: block;\r\n  ${responsiveText(18,18,12)}\r\n  color: ${(props)=>props.theme.colors.text};\r\n  line-height: 1;\r\n  width: 90%;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n`\r\nexport const CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n  const { title, phrase, id, img } = course\r\n  return <CourseCardContainer>\r\n    <CourseCardContent>\r\n      <CourseImg src={img} alt={title} />\r\n      <CourseTitle>{title}</CourseTitle>\r\n      <CoursePhrase>{phrase}</CoursePhrase>\r\n      <CourseLink to={'/courses/'+id}>Перейти</CourseLink>\r\n    </CourseCardContent>\r\n  </CourseCardContainer>\r\n}\r\nexport const AllCoursesContainer = styled.div`\r\n\r\n  width: 102.5%;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  ${marginTop(90)}\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  \r\n`\r\nfunction AllCourses() {\r\n\r\n  const courses = mockCourses\r\n\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Все курсы</PageBlockHeader>\r\n        <PageBlockPhrase>Добро пожаловать в мир Академии тут снова будет какой-то текст, но пока что так.</PageBlockPhrase>\r\n        <AllCoursesContainer>\r\n          {\r\n            courses.map(course => <CourseCard course={course} />)\r\n          }\r\n        </AllCoursesContainer>\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default AllCourses","import React, { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport SliderWithCustomArrows from '../../SliderWidthCustomArrows'\r\nimport { responsiveText } from '../PageBlocks'\r\nimport { isMobile, isMobileOnly } from 'react-device-detect'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport { MobileBreakPoint } from '../../utils/consts'\r\nimport { SwiperSlide } from 'swiper/react'\r\nimport { Link } from 'react-router-dom'\r\ninterface Course {\r\n    id: number | string,\r\n    title: string,\r\n    totalLessons: number,\r\n    finishedLessons: number,\r\n    img: string\r\n}\r\nconst mockCourses: Course[] = [\r\n    {\r\n        id: 0,\r\n        title: 'Как написать песню',\r\n        totalLessons: 10,\r\n        finishedLessons: 2,\r\n        img: mockCourse\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Как стать звездой',\r\n        totalLessons: 10,\r\n        finishedLessons: 0,\r\n        img: mockCourse\r\n    },\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n    //width: 50%;\r\n    position: relative;\r\n    \r\n`\r\n\r\nconst CourseTitle = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(64, 64, 16)}\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n    line-height: 1;\r\n    ${marginBottom(24)}\r\n`\r\n\r\nconst CourseProgress = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\n${marginBottom(45)}\r\n`\r\nconst CourseText = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(18, 18, 12)}\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n`\r\n\r\nconst CourseLessonsProgressbar = styled.div<{ progress: number }>`\r\n    height: 6px;\r\n    width: 18%;\r\n    min-width: 60px;\r\n    background-color: ${(props) => props.theme.colors.text};\r\n    border-radius: 10px;\r\n    margin-left: 3%;\r\n    margin-right: 1%;\r\n    &::after{\r\n        display: block;\r\n        content: '';\r\n        height: 100%;\r\n        width: ${(props) => props.progress + '%'};\r\n        background-color: ${(props) => props.theme.colors.progress};\r\n        border-radius: inherit;\r\n    }\r\n\r\n    @media (max-width: ${MobileBreakPoint}){\r\n        height: 3px;\r\n    }\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n    object-fit: cover;\r\n    width: 37svw;\r\n    aspect-ratio: 18/10;\r\n    pointer-events: none;\r\n    ${marginBottom(45)}\r\n`\r\n\r\nconst CourseLink = styled(Link)`\r\ndisplay: block;\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(36, 36, 12)}\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n`\r\nconst CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n    const progress = Math.round(course.finishedLessons / course.totalLessons * 100)\r\n\r\n    const linkPhrase = course.finishedLessons === 0 ? 'начать' : 'продолжить'\r\n\r\n    return <CourseCardContainer>\r\n        <div style={{ position: isMobileOnly ? 'absolute' : undefined, transform: isMobileOnly ? 'translate(10%,10%)' : undefined }}>\r\n            <CourseTitle>{course.title}</CourseTitle>\r\n            <CourseProgress>\r\n                <CourseText>{`Урок ${course.finishedLessons}/${course.totalLessons}`}</CourseText>\r\n                <CourseLessonsProgressbar progress={progress} />\r\n                <CourseText>{`${progress}%`}</CourseText>\r\n            </CourseProgress>\r\n        </div>\r\n        <CourseImg alt={course.title} src={course.img} />\r\n        <CourseLink to={'/courses/' + course.id}>{`${linkPhrase} изучение`}</CourseLink>\r\n    </CourseCardContainer>\r\n}\r\n\r\nconst MyCoursesCarouselContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    ${marginTop(90)}\r\n`\r\n\r\nfunction MyCoursesCorousel() {\r\n\r\n    const courses = mockCourses\r\n\r\n    const slidesToShow = isMobile ? 1 : 2\r\n    return (\r\n        <MyCoursesCarouselContainer>\r\n            {\r\n                courses.map((course) => <CourseCard course={course} />)\r\n            }\r\n        </MyCoursesCarouselContainer>\r\n    )\r\n}\r\n\r\nexport default MyCoursesCorousel","import React from 'react'\r\nimport { AllCoursesContainer, Course, CourseCard } from './AllCourses'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\n\r\nconst mockCourses: Course[] = [\r\n    {\r\n      id: 0,\r\n      title: 'Как написать песню',\r\n      img: mockCourse,\r\n      phrase: 'Все начинается с песен'\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Как стать звездой',\r\n      img: mockCourse,\r\n      phrase: 'Все начинается с песен'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Как написать песню',\r\n      img: mockCourse,\r\n      phrase: 'Все начинается с песен'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Как стать звездой',\r\n      img: mockCourse,\r\n      phrase: 'Все начинается с песен'\r\n    },]\r\n\r\nfunction CoursesCarousel() {\r\n\r\n    const courses=mockCourses\r\n  return (\r\n    <AllCoursesContainer>\r\n          {\r\n            courses.map(course => <CourseCard course={course} />)\r\n          }\r\n    </AllCoursesContainer>\r\n  )\r\n}\r\n\r\nexport default CoursesCarousel","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/store'\r\nimport { Page, PageBlock, PageBlockHeader, PageBlockPhrase, RedLinkButton } from '../PageBlocks'\r\nimport MyCoursesCorousel from '../Courses/MyCoursesCorousel'\r\nimport AllCourses from '../Courses/AllCourses'\r\nimport { ALL_COURSES_ROUTE } from '../../utils/consts'\r\nimport styled from 'styled-components'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport CoursesCarousel from '../Courses/CoursesCarousel'\r\n\r\n\r\nconst AllCoursesLinkContainer = styled.div`\r\n${marginTop(90)}\r\n${marginBottom(180)}\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\nfunction MainPage() {\r\n\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Главная</PageBlockHeader>\r\n        <MyCoursesCorousel />\r\n      </PageBlock>\r\n      <PageBlock>\r\n        <PageBlockHeader>Популярные курсы</PageBlockHeader>\r\n        <PageBlockPhrase>Добро пожаловать в мир Академии тут снова будет какой-то текст, но пока что так.</PageBlockPhrase>\r\n        <CoursesCarousel/>\r\n        <AllCoursesLinkContainer>\r\n          <RedLinkButton to={ALL_COURSES_ROUTE} hover>Все курсы</RedLinkButton>\r\n        </AllCoursesLinkContainer>\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MainPage"],"names":["mockCourses","id","title","img","mockCourse","phrase","CourseCardContainer","styled","div","marginBottom","CourseCardContent","CourseImg","CourseTitle","a","responsiveText","props","theme","colors","text","CoursePhrase","CourseLink","Link","CourseCard","_ref","course","_jsx","children","_jsxs","src","alt","to","AllCoursesContainer","marginTop","courses","Page","PageBlock","PageBlockHeader","PageBlockPhrase","map","totalLessons","finishedLessons","CourseProgress","CourseText","CourseLessonsProgressbar","progress","MobileBreakPoint","Math","round","linkPhrase","style","position","isMobileOnly","undefined","transform","MyCoursesCarouselContainer","isMobile","AllCoursesLinkContainer","MyCoursesCorousel","CoursesCarousel","RedLinkButton","ALL_COURSES_ROUTE","hover"],"sourceRoot":""}