{"version":3,"file":"static/js/946.061d8ca8.chunk.js","mappings":"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","sources":["Components/Courses/MyCourses.tsx","Components/Courses/MyCoursesCorousel.tsx","SliderWidthCustomArrows.tsx"],"sourcesContent":["import React from 'react'\r\nimport MyCoursesCorousel from './MyCoursesCorousel'\r\nimport { Page, PageBlock, PageBlockHeader } from '../PageBlocks'\r\n\r\nfunction MyCourses() {\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Мои курсы</PageBlockHeader>\r\n        <MyCoursesCorousel />\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MyCourses","import React, { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport SliderWithCustomArrows from '../../SliderWidthCustomArrows'\r\nimport { responsiveText } from '../PageBlocks'\r\nimport { isMobile, isMobileOnly } from 'react-device-detect'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport { MobileBreakPoint, TabletBreakPoint } from '../../utils/consts'\r\nimport { SwiperSlide } from 'swiper/react'\r\nimport { Link } from 'react-router-dom'\r\ninterface Course {\r\n    id: number | string,\r\n    title: string,\r\n    totalLessons: number,\r\n    finishedLessons: number,\r\n    img: string\r\n}\r\nconst mockCourses: Course[] = [\r\n    {\r\n        id: 0,\r\n        title: 'Как написать песню',\r\n        totalLessons: 10,\r\n        finishedLessons: 2,\r\n        img: mockCourse\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Как стать звездой',\r\n        totalLessons: 10,\r\n        finishedLessons: 0,\r\n        img: mockCourse\r\n    }\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n    width: 100%;   \r\n`\r\n\r\nconst CourseTitle = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(64, 36, 16)}\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n    line-height: 1;\r\n    ${marginBottom(24)}\r\n`\r\n\r\nconst CourseProgress = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\n${marginBottom(45)}\r\n`\r\nconst CourseText = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(18, 18, 12)}\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n`\r\n\r\nconst CourseLessonsProgressbar = styled.div<{ progress: number }>`\r\n    height: 6px;\r\n    width: 18%;\r\n    min-width: 60px;\r\n    background-color: ${(props) => props.theme.colors.text};\r\n    border-radius: 10px;\r\n    margin-left: 3%;\r\n    margin-right: 1%;\r\n    &::after{\r\n        display: block;\r\n        content: '';\r\n        height: 100%;\r\n        width: ${(props) => props.progress + '%'};\r\n        background-color: ${(props) => props.theme.colors.progress};\r\n        border-radius: inherit;\r\n    }\r\n\r\n    @media (max-width: ${MobileBreakPoint}){\r\n        height: 3px;\r\n    }\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n    object-fit: cover;\r\n    width: 91%;\r\n    aspect-ratio: 18/10;\r\n    pointer-events: none;\r\n    ${marginBottom(45)}\r\n`\r\n\r\nconst CourseLink = styled(Link)`\r\ndisplay: block;\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(36, 36, 12)}\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n`\r\nconst CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n    const progress = Math.round(course.finishedLessons / course.totalLessons * 100)\r\n\r\n    const linkPhrase = course.finishedLessons === 0 ? 'начать' : 'продолжить'\r\n\r\n    return <CourseCardContainer>\r\n            <div style={{ position: isMobile ? 'absolute' : undefined, transform: isMobile ? 'translate(5%,10%)' : undefined }}>\r\n                <CourseTitle>{course.title}</CourseTitle>\r\n                <CourseProgress>\r\n                    <CourseText>{`Урок ${course.finishedLessons}/${course.totalLessons}`}</CourseText>\r\n                    <CourseLessonsProgressbar progress={progress} />\r\n                    <CourseText>{`${progress}%`}</CourseText>\r\n                </CourseProgress>\r\n            </div>\r\n\r\n            <CourseImg alt={course.title} src={course.img} />\r\n            <CourseLink to={'/courses/' + course.id}>{`${linkPhrase} изучение`}</CourseLink>\r\n    </CourseCardContainer>\r\n}\r\n\r\nconst MyCoursesCarouselContainer = styled.div`\r\n\r\n  position: relative;\r\n  width: 105%;\r\n\r\n${marginTop(90)};\r\n\r\n@media (max-width: ${TabletBreakPoint}){\r\n    width: 180%;\r\n}\r\n\r\n`\r\n\r\nfunction MyCoursesCorousel() {\r\n\r\n    const courses = mockCourses\r\n\r\n\r\n    return (\r\n        <MyCoursesCarouselContainer>\r\n            <SliderWithCustomArrows childrenLength={courses.length} slidesToShow={2} infinite={isMobile}>\r\n                {\r\n                    courses.map((course) => <CourseCard course={course} />)\r\n                }\r\n            </SliderWithCustomArrows>\r\n        </MyCoursesCarouselContainer>\r\n    )\r\n}\r\n\r\nexport default MyCoursesCorousel","import React, { PropsWithChildren, useRef, useState } from 'react'\r\nimport Slider, { Settings } from 'react-slick'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { styled } from 'styled-components';\r\nimport { RiArrowLeftWideFill } from \"react-icons/ri\";\r\nimport { RiArrowRightWideFill } from \"react-icons/ri\";\r\nimport { MobileBreakPoint, TabletBreakPoint } from './utils/consts';\r\nimport { isDesktop } from 'react-device-detect';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nenum arrowType {\r\n    prev,\r\n    next\r\n}\r\ninterface SliderProps {\r\n    slidesToShow: number,\r\n    childrenLength: number,\r\n    infinite?: boolean\r\n}\r\n\r\nconst SliderContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst CustomArrow = styled.div<{ type: arrowType }>`\r\nwidth: fit-content;\r\nheight: fit-content;\r\ncolor: #c9c9c9;\r\nopacity: 0.5;\r\ntransition: opacity .1s ease-in-out;\r\npointer-events: auto;\r\ncursor: pointer;\r\nfont-size: 64px;\r\n&:hover{\r\n    opacity: 0.9;\r\n}\r\n`\r\n\r\nconst ArrowsContainer=styled.div`\r\nwidth: 87svw;\r\nz-index: 1;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 0;\r\ntransform: translate(-5%,-50%);\r\ndisplay: flex;\r\njustify-content: space-between;\r\npointer-events: none;\r\n\r\n@media(max-width: ${TabletBreakPoint}){\r\n    width: 110%;\r\n    \r\n}\r\n\r\n@media (max-width: ${MobileBreakPoint}) {\r\n    width: 113%;\r\n}\r\n`\r\n\r\nconst DotsContainer=styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n`\r\n\r\nconst Dot=styled.div<{selected: boolean}>`\r\n    width: 10px;\r\n    aspect-ratio: 1/1;\r\n    background-color: red;\r\n    opacity: ${({selected})=>selected? '0.5': '1'};\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    transition: opacity .3s ease-in-out;\r\n`\r\n\r\nconst CustomSlider=styled(Slider)`\r\n    \r\n`\r\nfunction SliderWithCustomArrows({ children, slidesToShow, childrenLength, infinite }: PropsWithChildren<SliderProps>) {\r\n\r\n\r\n    const sliderRef = useRef<Slider>(null)\r\n\r\n    const [selectedIndex, setSelectedIndex]=useState(0)\r\n    \r\n\r\n    const isSlided = infinite ?? childrenLength > slidesToShow\r\n    const settings: Settings = {\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        infinite: isSlided,\r\n        dots: false,\r\n        slidesToShow: slidesToShow,\r\n        swipeToSlide: isSlided,\r\n        rows: 1,\r\n        beforeChange(currentSlide: number, nextSlide: number) {\r\n            setSelectedIndex(nextSlide)\r\n        },\r\n    }\r\n\r\n    const nextSlide=()=>{\r\n        sliderRef.current?.slickNext()\r\n    }\r\n\r\n    const prevSlide=()=>{\r\n        sliderRef.current?.slickPrev()\r\n    }\r\n\r\n    const handlers=useSwipeable({\r\n        onSwipedLeft: nextSlide,\r\n        onSwipedRight: prevSlide\r\n    })\r\n    return (\r\n        <SliderContainer {...handlers}>\r\n            {isSlided && isDesktop && <ArrowsContainer>\r\n            <CustomArrow type={arrowType.prev} onClick={prevSlide}>\r\n                <RiArrowLeftWideFill />\r\n            </CustomArrow>\r\n            <CustomArrow type={arrowType.next} onClick={nextSlide}>\r\n                <RiArrowRightWideFill />\r\n            </CustomArrow>\r\n            </ArrowsContainer>}\r\n            <CustomSlider ref={sliderRef} {...settings}>\r\n                {\r\n                    children\r\n                }\r\n            </CustomSlider>\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\nexport default SliderWithCustomArrows"],"names":["_jsx","Page","children","_jsxs","PageBlock","PageBlockHeader","marginTop","MyCoursesCorousel","mockCourses","id","title","totalLessons","finishedLessons","img","mockCourse","CourseCardContainer","styled","div","CourseTitle","a","props","theme","colors","text","responsiveText","marginBottom","CourseProgress","CourseText","CourseLessonsProgressbar","progress","MobileBreakPoint","CourseImg","CourseLink","Link","CourseCard","_ref","course","Math","round","linkPhrase","style","position","isMobile","undefined","transform","alt","src","to","MyCoursesCarouselContainer","TabletBreakPoint","courses","SliderWithCustomArrows","childrenLength","length","slidesToShow","infinite","map","arrowType","SliderContainer","CustomArrow","ArrowsContainer","CustomSlider","selected","Slider","_ref2","sliderRef","useRef","selectedIndex","setSelectedIndex","useState","isSlided","settings","arrows","slidesToScroll","dots","swipeToSlide","rows","beforeChange","currentSlide","nextSlide","_sliderRef$current","current","slickNext","prevSlide","_sliderRef$current2","slickPrev","handlers","useSwipeable","onSwipedLeft","onSwipedRight","isDesktop","type","prev","onClick","RiArrowLeftWideFill","next","RiArrowRightWideFill","ref"],"sourceRoot":""}