{"version":3,"file":"static/js/946.fc1c5655.chunk.js","mappings":"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","sources":["Components/Courses/CourseProgress.tsx","Components/Courses/MyCourses.tsx","Components/Courses/MyCoursesCorousel.tsx","SliderWidthCustomArrows.tsx"],"sourcesContent":["import React from 'react'\r\nimport { MobileBreakPoint, TabletBreakPoint } from '../../utils/consts'\r\nimport styled, { css } from 'styled-components'\r\nimport { marginBottom } from '../Gaps'\r\nimport { responsiveText } from '../PageBlocks'\r\n\r\nconst CourseProgressContainer = styled.div<{coursePageView?: boolean}>`\r\nwidth: 50%;\r\ndisplay: flex;\r\nalign-items: center;\r\n${props=>marginBottom(props.coursePageView? 0 : 45)}\r\n\r\n@media (max-width: ${TabletBreakPoint}){\r\n    width: 100%;\r\n}\r\n`\r\n\r\nconst TextStyle=css`\r\n    color: ${(props) => props.theme.colors.text};\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n`\r\nconst CourseText = styled.a<{coursePageView?: boolean}>`\r\n    display: block;\r\n    ${(props)=>props.coursePageView? responsiveText(36, 24, 16) : responsiveText(18, 18, 12)}\r\n    ${(props)=>props.coursePageView && 'font-weight: 700'};\r\n    ${TextStyle}\r\n`\r\n\r\nconst CourseLessonsProgressbar = styled.div<{ progress: number,coursePageView?: boolean  }>`\r\n    height: 6px;\r\n    flex-grow: 1;\r\n    min-width: 60px;\r\n    background-color: ${(props) => props.theme.colors.text};\r\n    border-radius: 10px;\r\n    margin-left: 6%;\r\n    margin-right: 1%;\r\n    &::after{\r\n        display: block;\r\n        content: '';\r\n        height: 100%;\r\n        width: ${(props) => props.progress + '%'};\r\n        background-color: ${(props) => props.theme.colors.progress};\r\n        border-radius: inherit;\r\n    }\r\n\r\n    @media (max-width: ${MobileBreakPoint}){\r\n        height: 3px;\r\n    }\r\n`\r\n\r\ninterface CoursePropgressProps{\r\n    lessons: number,\r\n    finishedLessons: number,\r\n    coursePageView?: boolean\r\n}\r\n\r\nconst ProgressNumber=styled.a`\r\n    display: block;\r\n    ${TextStyle}\r\n    ${responsiveText(14, 14, 8)}\r\n\r\n`\r\n\r\nfunction CourseProgress({lessons, finishedLessons, coursePageView}: CoursePropgressProps) {\r\n\r\n    const progress = Math.round(finishedLessons / lessons * 100)\r\n  return (\r\n    <CourseProgressContainer coursePageView={coursePageView}>\r\n        <CourseText coursePageView={coursePageView}>{`Урок ${finishedLessons}/${lessons}`}</CourseText>\r\n                    <CourseLessonsProgressbar progress={progress} />\r\n                <ProgressNumber>{`${progress}%`}</ProgressNumber>\r\n    </CourseProgressContainer>\r\n  )\r\n}\r\n\r\nexport default CourseProgress","import React from 'react'\r\nimport MyCoursesCorousel from './MyCoursesCorousel'\r\nimport { Page, PageBlock, PageBlockHeader } from '../PageBlocks'\r\n\r\nfunction MyCourses() {\r\n  return (\r\n    <Page>\r\n      <PageBlock>\r\n        <PageBlockHeader marginTop={90}>Мои курсы</PageBlockHeader>\r\n        <MyCoursesCorousel />\r\n      </PageBlock>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default MyCourses","import React, { PropsWithChildren } from 'react'\r\nimport styled from 'styled-components'\r\nimport SliderWithCustomArrows from '../../SliderWidthCustomArrows'\r\nimport { responsiveText } from '../PageBlocks'\r\nimport { isMobile, isMobileOnly } from 'react-device-detect'\r\nimport { marginBottom, marginTop } from '../Gaps'\r\nimport mockCourse from '../../img/mockCourse.webp'\r\nimport { MobileBreakPoint, MY_COURSES_ROUTE, TabletBreakPoint } from '../../utils/consts'\r\nimport { SwiperSlide } from 'swiper/react'\r\nimport { Link } from 'react-router-dom'\r\nimport CourseProgress from './CourseProgress'\r\ninterface Course {\r\n    id: number | string,\r\n    title: string,\r\n    totalLessons: number,\r\n    finishedLessons: number,\r\n    img: string\r\n}\r\nconst mockCourses: Course[] = [\r\n    {\r\n        id: 0,\r\n        title: 'Как написать песню',\r\n        totalLessons: 10,\r\n        finishedLessons: 2,\r\n        img: mockCourse\r\n    },\r\n    {\r\n        id: 1,\r\n        title: 'Как стать звездой',\r\n        totalLessons: 10,\r\n        finishedLessons: 0,\r\n        img: mockCourse\r\n    }\r\n]\r\n\r\nconst CourseCardContainer = styled.div`\r\n    width: 100%;   \r\n`\r\n\r\nconst CourseTitle = styled.a`\r\n    display: block;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(64, 36, 16)}\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n    \r\n    ${marginBottom(24)}\r\n`\r\n\r\nconst CourseImg = styled.img`\r\n    object-fit: cover;\r\n    width: 91%;\r\n    aspect-ratio: 18/10;\r\n    pointer-events: none;\r\n    ${marginBottom(45)}\r\n`\r\n\r\nconst CourseLink = styled(Link)`\r\ndisplay: block;\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.colors.text};\r\n    ${responsiveText(36, 36, 12)}\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    line-height: 1;\r\n`\r\nconst CourseCard = ({ course }: PropsWithChildren<{ course: Course }>) => {\r\n\r\n    const progress = Math.round(course.finishedLessons / course.totalLessons * 100)\r\n\r\n    const linkPhrase = course.finishedLessons === 0 ? 'начать' : 'продолжить'\r\n\r\n    return <CourseCardContainer>\r\n            <div style={{position: isMobile ? 'absolute' : undefined, transform: isMobile ? 'translate(10%,15%)' : undefined }}>\r\n                <CourseTitle>{course.title}</CourseTitle>\r\n                <CourseProgress lessons={course.totalLessons} finishedLessons={course.finishedLessons}/>\r\n            </div>\r\n\r\n            <CourseImg alt={course.title} src={course.img} />\r\n            <CourseLink to={MY_COURSES_ROUTE+'/'+ course.id}>{`${linkPhrase} изучение`}</CourseLink>\r\n    </CourseCardContainer>\r\n}\r\n\r\nconst MyCoursesCarouselContainer = styled.div`\r\n\r\n  position: relative;\r\n  width: 105%;\r\n\r\n${marginTop(90)};\r\n\r\n@media (max-width: ${TabletBreakPoint}){\r\n    width: 180%;\r\n}\r\n\r\n`\r\n\r\nfunction MyCoursesCorousel() {\r\n\r\n    const courses = mockCourses\r\n\r\n\r\n    return (\r\n        <MyCoursesCarouselContainer>\r\n            <SliderWithCustomArrows childrenLength={courses.length} slidesToShow={2} infinite={isMobile}>\r\n                {\r\n                    courses.map((course) => <CourseCard course={course} />)\r\n                }\r\n            </SliderWithCustomArrows>\r\n        </MyCoursesCarouselContainer>\r\n    )\r\n}\r\n\r\nexport default MyCoursesCorousel","import React, { PropsWithChildren, useRef, useState } from 'react'\r\nimport Slider, { Settings } from 'react-slick'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { styled } from 'styled-components';\r\nimport { RiArrowLeftWideFill } from \"react-icons/ri\";\r\nimport { RiArrowRightWideFill } from \"react-icons/ri\";\r\nimport { MobileBreakPoint, TabletBreakPoint } from './utils/consts';\r\nimport { isDesktop } from 'react-device-detect';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nenum arrowType {\r\n    prev,\r\n    next\r\n}\r\ninterface SliderProps {\r\n    slidesToShow: number,\r\n    childrenLength: number,\r\n    infinite?: boolean\r\n}\r\n\r\nconst SliderContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst CustomArrow = styled.div<{ type: arrowType }>`\r\nwidth: fit-content;\r\nheight: fit-content;\r\ncolor: #c9c9c9;\r\nopacity: 0.5;\r\ntransition: opacity .1s ease-in-out;\r\npointer-events: auto;\r\ncursor: pointer;\r\nfont-size: 64px;\r\n&:hover{\r\n    opacity: 0.9;\r\n}\r\n`\r\n\r\nconst ArrowsContainer=styled.div`\r\nwidth: 87svw;\r\nz-index: 1;\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 0;\r\ntransform: translate(-5%,-50%);\r\ndisplay: flex;\r\njustify-content: space-between;\r\npointer-events: none;\r\n\r\n@media(max-width: ${TabletBreakPoint}){\r\n    width: 110%;\r\n    \r\n}\r\n\r\n@media (max-width: ${MobileBreakPoint}) {\r\n    width: 113%;\r\n}\r\n`\r\n\r\nconst DotsContainer=styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n`\r\n\r\nconst Dot=styled.div<{selected: boolean}>`\r\n    width: 10px;\r\n    aspect-ratio: 1/1;\r\n    background-color: red;\r\n    opacity: ${({selected})=>selected? '0.5': '1'};\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    transition: opacity .3s ease-in-out;\r\n`\r\n\r\nconst CustomSlider=styled(Slider)`\r\n    \r\n`\r\nfunction SliderWithCustomArrows({ children, slidesToShow, childrenLength, infinite }: PropsWithChildren<SliderProps>) {\r\n\r\n\r\n    const sliderRef = useRef<Slider>(null)\r\n\r\n    const [selectedIndex, setSelectedIndex]=useState(0)\r\n    \r\n\r\n    const isSlided = infinite ?? childrenLength > slidesToShow\r\n    const settings: Settings = {\r\n        arrows: false,\r\n        slidesToScroll: 1,\r\n        infinite: isSlided,\r\n        dots: false,\r\n        slidesToShow: slidesToShow,\r\n        swipeToSlide: isSlided,\r\n        rows: 1,\r\n        beforeChange(currentSlide: number, nextSlide: number) {\r\n            setSelectedIndex(nextSlide)\r\n        },\r\n    }\r\n\r\n    const nextSlide=()=>{\r\n        sliderRef.current?.slickNext()\r\n    }\r\n\r\n    const prevSlide=()=>{\r\n        sliderRef.current?.slickPrev()\r\n    }\r\n\r\n    const handlers=useSwipeable({\r\n        onSwipedLeft: nextSlide,\r\n        onSwipedRight: prevSlide\r\n    })\r\n    return (\r\n        <SliderContainer {...handlers}>\r\n            {isSlided && isDesktop && <ArrowsContainer>\r\n            <CustomArrow type={arrowType.prev} onClick={prevSlide}>\r\n                <RiArrowLeftWideFill />\r\n            </CustomArrow>\r\n            <CustomArrow type={arrowType.next} onClick={nextSlide}>\r\n                <RiArrowRightWideFill />\r\n            </CustomArrow>\r\n            </ArrowsContainer>}\r\n            <CustomSlider ref={sliderRef} {...settings}>\r\n                {\r\n                    children\r\n                }\r\n            </CustomSlider>\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\nexport default SliderWithCustomArrows"],"names":["CourseProgressContainer","styled","div","props","marginBottom","coursePageView","TabletBreakPoint","TextStyle","css","theme","colors","text","CourseText","a","responsiveText","CourseLessonsProgressbar","progress","MobileBreakPoint","ProgressNumber","_ref","lessons","finishedLessons","Math","round","_jsxs","children","_jsx","Page","PageBlock","PageBlockHeader","marginTop","MyCoursesCorousel","mockCourses","id","title","totalLessons","img","mockCourse","CourseCardContainer","CourseTitle","CourseImg","CourseLink","Link","CourseCard","course","linkPhrase","style","position","isMobile","undefined","transform","CourseProgress","alt","src","to","MY_COURSES_ROUTE","MyCoursesCarouselContainer","courses","SliderWithCustomArrows","childrenLength","length","slidesToShow","infinite","map","arrowType","SliderContainer","CustomArrow","ArrowsContainer","CustomSlider","selected","Slider","_ref2","sliderRef","useRef","selectedIndex","setSelectedIndex","useState","isSlided","settings","arrows","slidesToScroll","dots","swipeToSlide","rows","beforeChange","currentSlide","nextSlide","_sliderRef$current","current","slickNext","prevSlide","_sliderRef$current2","slickPrev","handlers","useSwipeable","onSwipedLeft","onSwipedRight","isDesktop","type","prev","onClick","RiArrowLeftWideFill","next","RiArrowRightWideFill","ref"],"sourceRoot":""}